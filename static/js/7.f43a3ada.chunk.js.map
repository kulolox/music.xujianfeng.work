{"version":3,"sources":["components/LazyImage/index.tsx","assets/imgs/default_image.svg","pages/album/index.module.less","utils/tool.ts","components/Loadinger/index.tsx","pages/album/index.tsx"],"names":["LazyImage","props","useState","isOnload","setOnload","useEffect","img","Image","src","onload","IMAGE_PLACHOLDER","style","width","height","border","alt","module","exports","checkMusic","privilege","st","fee","arraySplit","arr","step","len","length","rec","i","push","slice","minHeight","display","justifyContent","alignItems","tip","text","indicator","LoadingOutlined","fontSize","initState","info","albumId","name","nickname","coverImgUrl","createTime","avatarUrl","tags","description","list","Album","dispatch","useDispatch","router","useRouter","loading","setLoading","setcacheList","useLocalStorage","query","id","album","setAlbum","canPlayList","useMemo","filter","t","url","a","getAlbumDetail","playlist","data","albumData","creator","formatIds","trackIds","map","join","requests","ids","getSongList","Promise","all","result","songs","privileges","forEach","concat","seconds","dt","authors","ar","j","al","picUrl","canPlaying","urlRequests","getSongUrl","urlResults","index","getAlbum","initData","useCallback","setSongList","getSongUrlById","autoPlay","playSong","playSongById","findIndex","console","log","className","styles","head","logo","main","color","creater","moment","format","buttonGroup","size","icon","PlayCircleOutlined","onClick","PlusSquareOutlined","tag","key","descript","listBox","title","Loadinger","bordered","dataSource","renderItem","item","Item","song","songName","songCreator","second","Duration","type","disabled","backTop","visibilityHeight"],"mappings":"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","file":"static/js/7.f43a3ada.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport IMAGE_PLACHOLDER from '@/assets/imgs/default_image.svg';\n\ninterface IProps {\n  src: string;\n  width: string;\n  height: string;\n  border?: boolean;\n}\n\nconst LazyImage = (props: IProps) => {\n  const [isOnload, setOnload] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = props.src;\n    img.onload = () => {\n      setOnload(true);\n    };\n    return (img.onload = () => {});\n  }, [props.src]);\n\n  return (\n    <img\n      src={isOnload ? props.src : IMAGE_PLACHOLDER}\n      style={{\n        width: props.width,\n        height: props.height,\n        border: props.border ? '1px solid #f1f1f1' : 'none',\n      }}\n      alt=\"\"\n    />\n  );\n};\n\nexport default LazyImage;\n","module.exports = __webpack_public_path__ + \"static/media/default_image.3590e8c0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album\":\"_2hzivxDtZ7Lpvgv_X6pVe_\",\"head\":\"_2G7dEGYEINlmoML5hs1NhP\",\"logo\":\"_1XpWqywhwbUYPRNTj_2SwZ\",\"img\":\"SjhxsrVLLEEskJ03LfpEl\",\"main\":\"_1-lryxsU1rMvVjdxnaLMSB\",\"name\":\"_1TgPIWbSRfEXB5K_PytIj-\",\"creater\":\"_3ybRWFtnK1mBmZh1uYR2gJ\",\"nickname\":\"_1jILlatWTSWRHiqXAiGlp6\",\"createTime\":\"_1i2DNrQyAagf55L_oxgMSm\",\"buttonGroup\":\"_2oNF_eCmWK3wXiMEX8ipq8\",\"tags\":\"_2NXyU-l3NDvjYBWcqg7rAo\",\"listBox\":\"_380ztTIKx73V2U9a6z6OTk\",\"title\":\"_2R7Lx1geUI8ZuUW1MaR26i\",\"list\":\"i7c1ccAuZx-PWGrwXZvan\",\"item\":\"_1UK-h9FidD_9NTxhMCLDzD\",\"index\":\"_3FrKiNJzzQaolrCA5-D_lD\",\"song\":\"_1Mdfhs18QHPInAh85OfR1W\",\"songName\":\"_2b0O4qR1U949NuqZHG0rDW\",\"songCreator\":\"_2Ekk2V7bfLi-WIEHRrawnv\",\"second\":\"_3HGrHnDeHpZumNXgIB0ahX\",\"canPlaying\":\"_3B08xlREDZ2TTBjaHLS8na\",\"backTop\":\"_2N80j-B5i-D0JuOeH9zKy8\"};","/**\n * 返回当前路径中uri的指定参数\n * @param {string} name\n * @return {string|null}\n */\nexport function getUrlParam(name: string) {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`); // 构造一个含有目标参数的正则表达式对象\n  const r = window.location.search.substr(1).match(reg); // 匹配目标参数\n  if (r != null) return decodeURIComponent(r[2]);\n  return null; // 返回参数值\n}\n\n/**\n * 判断音乐是否可以播放\n * @param {Object} privileges 原始字符串\n * @returns {Boolean}\n */\nexport const checkMusic = (privilege: any) => {\n  return (\n    privilege.st !== -1 &&\n    privilege.st !== -200 &&\n    privilege.fee !== 1 &&\n    privilege.fee !== 4 &&\n    privilege.fee !== 16\n  );\n};\n\n/**\n * 数组分片，当数组长度超过step时，以step为步长分片数组\n * @param {Array} arr\n * @param {Number} step 分片步长\n */\nexport const arraySplit = (arr: any, step = 100) => {\n  const len = arr.length;\n  const rec = [];\n  if (len <= step) {\n    return [arr];\n  }\n  for (let i = 0; i < len; i += step) {\n    rec.push(arr.slice(i, i + step));\n  }\n  return rec;\n};\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\ninterface IProps {\n  text?: string;\n}\n\nexport default (props: IProps) => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        minHeight: '30vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Spin tip={props.text ?? ''} indicator={<LoadingOutlined style={{ fontSize: 24 }} />} />\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { Tag, List, Button, BackTop } from 'antd';\nimport { PlusSquareOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { getAlbumDetail, getSongList, getSongUrl } from '@/api';\nimport { useLocalStorage, useRouter } from '@/hooks';\nimport { arraySplit, checkMusic } from '@/utils/tool';\nimport Duration from '@/components/Duration';\nimport { getSongUrlById, setSongList } from '@/store/playerSlice';\nimport { IAlbumDetail, ISong } from '@/interfaces';\nimport styles from './index.module.less';\nimport LazyImage from '@/components/LazyImage';\nimport Loadinger from '@/components/Loadinger';\n\nconst formateTime = (time: number) => {\n  if (time) {\n    return moment().format('YYYY-MM-DD');\n  } else {\n    return 'NULL';\n  }\n};\n\n// 初始化数据\nconst initState: IAlbumDetail = {\n  info: {\n    albumId: '',\n    name: '',\n    nickname: '',\n    coverImgUrl: '',\n    createTime: 0,\n    avatarUrl: '',\n    tags: [],\n    description: '',\n  },\n  list: [],\n};\n\nconst Album = () => {\n  const dispatch = useDispatch();\n  // 获取路由相关数据与方法\n  const router: any = useRouter();\n  const [loading, setLoading] = useState(false);\n\n  // 播放列表缓存\n  const setcacheList = useLocalStorage<ISong[]>('cache-song-list', null)[1];\n\n  // 专辑信息列表缓存\n  const [album, setAlbum] = useLocalStorage(router.query.id, initState);\n\n  const canPlayList = useMemo(() => album.list.filter(t => t.url), [album.list]);\n\n  useEffect(() => {\n    // 如果缓存有数据，则不走请求逻辑\n    if (album && album.list.length > 0) {\n      return;\n    }\n    async function getAlbum() {\n      setLoading(true);\n      const {\n        data: { playlist },\n      } = await getAlbumDetail(router.query.id);\n\n      const albumData: IAlbumDetail = {\n        info: {\n          albumId: router.query.id,\n          name: playlist.name,\n          nickname: playlist.creator.nickname,\n          avatarUrl: playlist.creator.avatarUrl,\n          createTime: playlist.createTime,\n          coverImgUrl: playlist.coverImgUrl,\n          description: playlist.description,\n          tags: playlist.tags,\n        },\n        list: [],\n      };\n\n      // 切割组合歌曲id\n      const formatIds = arraySplit(playlist.trackIds.map((t: { id: string }) => t.id)).map(t =>\n        t.join(','),\n      );\n\n      try {\n        const requests = formatIds.map(ids => getSongList(ids));\n        const result = await Promise.all(requests);\n\n        let songs: any[] = [];\n        let privileges: any[] = [];\n        result.forEach(t => {\n          songs = songs.concat(t.data.songs);\n          privileges = privileges.concat(t.data.privileges);\n        });\n\n        albumData.list = songs.map((t, i) => ({\n          id: t.id,\n          name: t.name,\n          seconds: t.dt / 1000,\n          authors: t.ar.map((j: { name: string }) => j.name).join('，'),\n          coverImgUrl: t.al.picUrl,\n          canPlaying: checkMusic(privileges[i]), // 先通过checkMusic筛一遍\n          url: null,\n        }));\n\n        // 获取歌曲url\n        const urlRequests = albumData.list.map(t => getSongUrl(t.id));\n        const urlResults = await Promise.all(urlRequests);\n        albumData.list.map((t, index) => (t.url = urlResults[index].data.data[0].url));\n        setAlbum(albumData); // 缓存专辑\n        setcacheList(albumData.list.filter(t => t.url)); // 缓存可播放歌曲\n      } finally {\n        setLoading(false);\n      }\n    }\n    getAlbum();\n  }, [album, router.query.id, setAlbum, setcacheList]);\n\n  // 载入当前歌单可播放歌曲\n  const initData = useCallback(() => {\n    // 更新可播放歌曲列表\n    dispatch(setSongList({ data: canPlayList }));\n    dispatch(getSongUrlById({ id: canPlayList[0].id, index: 0, autoPlay: false }));\n  }, [canPlayList, dispatch]);\n\n  // 播放\n  const playSong = useCallback(() => {\n    dispatch(setSongList({ data: canPlayList }));\n    dispatch(getSongUrlById({ id: canPlayList[0].id, index: 0, autoPlay: true }));\n  }, [canPlayList, dispatch]);\n\n  const playSongById = useCallback(\n    id => {\n      // 根据id播放\n      const index = canPlayList.findIndex(t => t.id === id);\n      if (index < 0) {\n        dispatch(setSongList({ data: canPlayList }));\n      }\n      dispatch(getSongUrlById({ id, index, autoPlay: true }));\n    },\n    [canPlayList, dispatch],\n  );\n\n  console.log('album render');\n\n  return (\n    <div className={styles.album}>\n      <div className={styles.head}>\n        <div className={styles.logo}>\n          <img className={styles.img} src={album.info.coverImgUrl} alt=\"\" />\n        </div>\n        <div className={styles.main}>\n          <div className={styles.name}>\n            <Tag color=\"magenta\">歌单</Tag>\n            {album.info.name}\n          </div>\n          <div className={styles.creater}>\n            <LazyImage width=\"36px\" height=\"36px\" src={album.info.avatarUrl} border />\n            <div className={styles.nickname}>{album.info.nickname}</div>\n            <div className={styles.createTime}>创建时间：{formateTime(album.info.createTime)}</div>\n          </div>\n          <div className={styles.buttonGroup}>\n            <Button size=\"small\" icon={<PlayCircleOutlined />} onClick={playSong}>\n              播放\n            </Button>\n            <Button size=\"small\" onClick={initData}>\n              <PlusSquareOutlined />\n            </Button>\n          </div>\n          <div className={styles.tags}>\n            标签：\n            {album.info.tags.map(tag => (\n              <Tag key={tag}>{tag}</Tag>\n            ))}\n          </div>\n          <div className={styles.descript}>介绍：{album.info.description}</div>\n        </div>\n      </div>\n      <div className={styles.listBox}>\n        <div className={styles.title}>歌曲列表</div>\n        <div className={styles.list}>\n          {loading ? (\n            <Loadinger text=\"Loading...\" />\n          ) : (\n            <List\n              bordered\n              size=\"small\"\n              dataSource={album.list}\n              renderItem={(item, index) => (\n                <List.Item key={item.id}>\n                  <div className={styles.item}>\n                    <div className={styles.index}>{index + 1}</div>\n                    <div className={styles.song}>\n                      <LazyImage border src={item.coverImgUrl} width=\"36px\" height=\"36px\" />\n                      <div className={styles.songName}>{item.name}</div>\n                    </div>\n                    <div className={styles.songCreator}>{item.authors}</div>\n                    <div className={styles.second}>\n                      <Duration seconds={item.seconds} />\n                    </div>\n                    <div className={styles.canPlaying}>\n                      {item.url ? (\n                        <Button onClick={() => playSongById(item.id)} type=\"text\" size=\"small\">\n                          播放\n                        </Button>\n                      ) : (\n                        <Button type=\"text\" size=\"small\" disabled>\n                          无版权\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </List.Item>\n              )}\n            />\n          )}\n        </div>\n      </div>\n      <BackTop className={styles.backTop} visibilityHeight={600} />\n    </div>\n  );\n};\n\nexport default Album;\n"],"sourceRoot":""}