{"version":3,"sources":["store/playerSlice.ts","components/Audio/index.tsx","components/Player/Controller/index.tsx","components/Player/PlayerInfo/index.tsx","components/ScrollContainer/index.tsx","components/Player/PlayerPopup/Lyric/index.tsx","components/Player/PlayerPopup/List/index.tsx","components/Player/PlayerPopup/index.tsx","components/Player/Volume/index.tsx","components/Player/index.tsx","components/PlayerBox/index.tsx","App.tsx","serviceWorker.ts","store/rootReducer.ts","store/index.ts","index.tsx","components/IconFont/index.tsx","hooks/index.ts","components/Player/PlayerPopup/List/index.module.less","components/Player/index.module.less","components/Player/PlayerPopup/Lyric/index.module.less","components/Player/PlayerInfo/index.module.less","components/Duration/index.tsx","api/config.ts","api/request.ts","api/index.ts","components/PlayerBox/index.module.less","components/Player/Controller/index.module.less","components/ScrollContainer/index.module.less","components/Player/PlayerPopup/index.module.less","components/Player/Volume/index.module.less"],"names":["getSongUrlById","createAsyncThunk","data","a","dispatch","setPlaying","getSongUrl","id","res","autoPlay","index","url","playerSlice","createSlice","name","initialState","currentIndex","currentUrl","playing","loop","volume","currentTime","seekToTime","list","extraReducers","builder","addCase","fulfilled","state","action","payload","reducers","setSongList","changeVolume","setCurrentTime","setSeekToTime","setCurrentUrl","setCurrentIndex","togglePlaying","actions","Audio","useSelector","player","useDispatch","RPlayer","useRef","useEffect","current","play","pause","useEventListener","length","console","log","ref","src","preload","Controller","hasPrevSong","useMemo","hastSong","hasNextSong","customClassName","isDisabled","classNames","styles","button","disabled","className","controller","onClick","IconFont","style","fontSize","type","PlayerInfo","useState","seeking","setSeeking","progressValue","setProgressValue","progressChange","useCallback","val","info","coverImage","shape","size","coverImgUrl","content","head","Duration","seconds","progress","onAfterChange","onChange","defaultValue","step","tooltipVisible","value","max","Math","floor","ScrollContainer","props","children","getContainerDom","slideBlockHeight","setSlideBlockHeight","slideBlockTop","setSlideBlockTop","hasScrollBar","setHasScrollBar","container","handelScroll","e","target","clientHeight","scrollHeight","scrollTop","scrollContent","scrollBar","height","top","timeExp","scroll","dom","distance","start","maxScrollTop","window","requestAnimationFrame","work","timestamp","t","easeCubicInOut","newScrollTop","Lyric","lyric","setLyric","formatLyrics","lyricStr","lines","split","lyricArr","i","line","result","exec","txt","replace","trim","push","time","sort","b","parseLyric","timeRange","map","lyr","activeIndex","setActiveIndex","setContainer","throttleIndex","throttle","range","len","indexOf","getTimeIndex","containerDom","lyricDom","document","getElementsByClassName","offsetTop","getSongLyric","then","lrc","title","lyrContainer","active","key","noLyric","List","item","songName","songCreator","authors","second","canPlaying","findIndex","AudioPopup","backImg","backgroundImage","Volume","showVolume","setShowVolume","useOnClickOutside","toggleVolume","icon","hide","min","Player","showPopup","setShowPopup","audio","menu","count","overflowCount","offset","PlayerPopup","PlayerBox","isLock","setLock","playerBox","locked","lockBox","Home","React","lazy","Album","App","useLocalStorage","Suspense","fallback","path","exact","component","Boolean","location","hostname","match","rootReducer","combineReducers","playerReducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","store","configureStore","reducer","devTools","process","require","default","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","createFromIconfontCN","scriptUrl","initialValue","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useRouter","params","useParams","useLocation","history","useHistory","useRouteMatch","pathname","query","queryString","search","eventName","handler","element","savedHandler","targetElement","addEventListener","eventListener","event","removeEventListener","listener","contains","module","exports","moment","Date","utcOffset","format","axiosConfig","baseURL","transformResponse","timeout","responseType","maxContentLength","validateStatus","status","pending","cancelToken","axios","CancelToken","removePending","config","p","method","cancel","splice","request","create","interceptors","use","c","Promise","reject","response","baseUrl","getBanner","get","getCatlist","getAlbumList","limit","cat","order","getAlbumDetail","getSongList","ids"],"mappings":"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","file":"static/js/main.5872b47b.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getSongUrl } from '@/api';\nimport { IPlayerDefaultState } from '@/interfaces';\n\nconst defaultState: IPlayerDefaultState = {\n  currentIndex: -1,\n  currentUrl: '',\n  playing: false,\n  loop: false,\n  volume: 60,\n  currentTime: 0,\n  seekToTime: 0,\n  list: [],\n};\n\n// 每次播放都重新获取歌曲url\nexport const getSongUrlById = createAsyncThunk(\n  'player/getSongUrl',\n  async (data: any, { dispatch }) => {\n    // 播放前先关闭播放状态\n    dispatch(setPlaying(false))\n    // 重新获取歌曲url\n    const res = await getSongUrl(data.id);\n    return {\n      autoPlay: data.autoPlay,\n      index: data.index,\n      url: res.data.data[0].url,\n    };\n  },\n);\n\nconst playerSlice = createSlice({\n  name: 'player',\n  initialState: defaultState,\n  extraReducers: builder => {\n    builder.addCase(getSongUrlById.fulfilled, (state, action) => {\n      const { index, url, autoPlay } = action.payload\n      state.currentIndex = index\n      state.currentUrl = url\n      // 根据传递参数决定是否自动播放\n      state.playing = autoPlay;\n    });\n  },\n  reducers: {\n    setSongList: (state, action) => {\n      state.list = action.payload.data;\n      state.currentIndex = 0;\n    },\n    changeVolume: (state, action) => {\n      state.volume = action.payload.volume\n    },\n    setCurrentTime: (state, action) => {\n      state.currentTime = action.payload.currentTime;\n    },\n    setSeekToTime: (state, action) => {\n      state.seekToTime = action.payload.seekToTime;\n    },\n    setPlaying: (state, action) => {\n      state.playing = action.payload.playing;\n    },\n    setCurrentUrl: (state, action) => {\n      state.currentUrl = action.payload.url;\n    },\n    setCurrentIndex: (state, action) => {\n      state.currentIndex = action.payload.index;\n    },\n    togglePlaying: (state, action) => {\n      const { playing } = action.payload;\n      state.playing = playing;\n    },\n  },\n});\n\nexport const {\n  setSongList,\n  setCurrentIndex,\n  setCurrentUrl,\n  changeVolume,\n  togglePlaying,\n  setPlaying,\n  setCurrentTime,\n  setSeekToTime,\n} = playerSlice.actions;\n\nexport default playerSlice.reducer;\n","import React, { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useEventListener } from '@/hooks';\r\nimport { getSongUrlById, setPlaying, setCurrentTime } from '@/store/playerSlice';\r\nimport { RootState } from '@/store/rootReducer';\r\n\r\nconst Audio = () => {\r\n  const { currentIndex, currentUrl, list, playing, volume, seekToTime } = useSelector(\r\n    (state: RootState) => state.player,\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const RPlayer = useRef<HTMLAudioElement>(null);\r\n\r\n  const onTimeUpdate = () => {\r\n    dispatch(setCurrentTime({ currentTime: RPlayer.current!.currentTime }));\r\n  };\r\n\r\n  const onDuration = () => {\r\n    console.log('onDuration');\r\n  };\r\n\r\n  const onEnded = () => {\r\n    if (currentIndex < list.length - 1) {\r\n      const index = currentIndex + 1;\r\n      dispatch(getSongUrlById({ id: list[index].id, index, autoPlay: true }));\r\n    } else {\r\n      dispatch(setPlaying({ playing: false }));\r\n    }\r\n  };\r\n\r\n  // 根据播放状态及当前歌曲切换播放暂停\r\n  useEffect(() => {\r\n    if (playing) {\r\n      RPlayer.current!.play();\r\n    } else {\r\n      RPlayer.current!.pause();\r\n    }\r\n  }, [playing]);\r\n\r\n  // 音量控制\r\n  useEffect(() => {\r\n    RPlayer.current!.volume = volume / 100;\r\n  }, [volume]);\r\n\r\n  // 进度\r\n  useEffect(() => {\r\n    RPlayer.current!.currentTime = seekToTime;\r\n  }, [seekToTime]);\r\n\r\n  useEventListener('timeupdate', onTimeUpdate, RPlayer);\r\n  useEventListener('ended', onEnded, RPlayer);\r\n  useEventListener('durationchange', onDuration, RPlayer);\r\n\r\n  return <audio ref={RPlayer} src={currentUrl} preload=\"auto\" />;\r\n};\r\n\r\nexport default Audio;\r\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport IconFont from '@components/IconFont';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport { getSongUrlById, togglePlaying } from '@/store/playerSlice';\nimport styles from './index.module.less';\n\nconst Controller = () => {\n  const { currentIndex, list, playing } = useSelector((state: RootState) => state.player);\n  const dispatch = useDispatch();\n\n  // 上一曲\n  const hasPrevSong = useMemo(() => currentIndex > 0, [currentIndex]);\n  const prevSong = () => {\n    if (hasPrevSong) {\n      const index = currentIndex - 1;\n      dispatch(getSongUrlById({ id: list[index].id, index, autoPlay: true }));\n    }\n  };\n\n  // 播放暂停\n  const hastSong = useMemo(() => list.length > 0, [list]);\n  const togglePlay = () => {\n    dispatch(togglePlaying({ playing: !playing }));\n  };\n\n  // 下一曲\n  const hasNextSong = useMemo(() => currentIndex < list.length - 1, [currentIndex, list]);\n  const nextSong = () => {\n    if (hasNextSong) {\n      const index = currentIndex + 1;\n      dispatch(getSongUrlById({ id: list[index].id, index, autoPlay: true }));\n    }\n  };\n\n  const customClassName = (isDisabled: Boolean) => {\n    return classNames(styles.button, { [styles.disabled]: isDisabled });\n  };\n\n  return (\n    <div className={styles.controller}>\n      <div className={customClassName(!hasPrevSong)} onClick={prevSong}>\n        <IconFont style={{ fontSize: 22 }} type=\"icon-prev\" />\n      </div>\n      <div className={customClassName(!hastSong)} onClick={togglePlay}>\n        {playing ? (\n          <IconFont style={{ fontSize: 25 }} type=\"icon-pause\" />\n        ) : (\n          <IconFont style={{ fontSize: 25 }} type=\"icon-play\" />\n        )}\n      </div>\n      <div className={customClassName(!hasNextSong)} onClick={nextSong}>\n        <IconFont style={{ fontSize: 22 }} type=\"icon-next\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Controller;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Avatar, Slider } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport { setCurrentTime, setSeekToTime } from '@/store/playerSlice';\nimport Duration from '@components/Duration';\nimport styles from './index.module.less';\n\nconst DEFAULT_COVER_IMAGE = 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png';\n\nconst PlayerInfo = () => {\n  const { currentIndex, list, currentTime } = useSelector((state: RootState) => state.player);\n  const dispatch = useDispatch();\n\n  const [seeking, setSeeking] = useState(false);\n  const [progressValue, setProgressValue] = useState(0); // 进度条进度\n\n  // 进度条\n  const progressChange = useCallback((val: number) => {\n    // 进度条操作\n    setSeeking(true);\n    setProgressValue(val);\n  }, []);\n\n  const progressAfterChange = () => {\n    setSeeking(false);\n    // 拖动完成，更新要跳转的位置\n    dispatch(\n      setSeekToTime({\n        seekToTime: progressValue,\n      }),\n    );\n  };\n\n  // 当切换歌曲时，重置本地播放进度\n  useEffect(() => {\n    // 重置当前播放进度，进度条进度，操作状态\n    dispatch(\n      setCurrentTime({\n        currentTime: 0,\n      }),\n    );\n    setProgressValue(0);\n    setSeeking(false); // onEnd有概率不触发progressAfterChange，手动重置\n  }, [currentIndex, dispatch]);\n\n  useEffect(() => {\n    // 如果未操作进度条，currentTime 与 progressValue同步\n    if (!seeking) {\n      setProgressValue(currentTime);\n    }\n  }, [currentTime, seeking]);\n\n  return (\n    <div className={styles.info}>\n      <Avatar\n        className={styles.coverImage}\n        shape=\"square\"\n        size={36}\n        src={list[currentIndex]?.coverImgUrl ?? DEFAULT_COVER_IMAGE}\n      />\n      <div className={styles.content}>\n        <div className={styles.head}>\n          <div>{list[currentIndex]?.name ?? '暂无'}</div>\n          <div>\n            <Duration seconds={progressValue} />\n            /\n            <Duration seconds={list[currentIndex]?.seconds} />\n          </div>\n        </div>\n        <div className={styles.progress}>\n          <Slider\n            onAfterChange={progressAfterChange}\n            onChange={progressChange}\n            defaultValue={0}\n            step={0.1}\n            tooltipVisible={false}\n            value={progressValue}\n            max={Math.floor(list[currentIndex]?.seconds)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerInfo;\n","import React, { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\nimport { useEventListener } from '@/hooks';\n\ninterface IProps {\n  children: ReactNode;\n  className?: string;\n  getContainerDom?: Function;\n}\n\nconst ScrollContainer = (props: IProps) => {\n  const { children, className, getContainerDom } = props;\n  const [slideBlockHeight, setSlideBlockHeight] = useState(0);\n  const [slideBlockTop, setSlideBlockTop] = useState(0);\n  const [hasScrollBar, setHasScrollBar] = useState(false);\n  const container = useRef<HTMLDivElement>(null);\n\n  // 计算滚动条位置\n  const handelScroll = useCallback(\n    (e: Event) => {\n      const { clientHeight, scrollHeight, scrollTop } = e.target as HTMLElement;\n      // 滑块距离顶部距离\n      const slideBlockTop =\n        (scrollTop * (clientHeight - slideBlockHeight)) / (scrollHeight - clientHeight);\n      setSlideBlockTop(slideBlockTop);\n    },\n    [slideBlockHeight],\n  );\n\n  // 计算滚动条高度\n  useEffect(() => {\n    // 子元素未载入\n    if (!props.children) return;\n    // 滚动容器未挂载\n    if (!container.current) return;\n    const { clientHeight, scrollHeight } = container.current;\n    // 当滚动高度等于容器高度，不出滚动条\n    if (scrollHeight === clientHeight) {\n      setHasScrollBar(false);\n    } else {\n      // 滑块高度\n      const slideBlockHeight = clientHeight ** 2 / scrollHeight;\n      setHasScrollBar(true);\n      setSlideBlockHeight(slideBlockHeight);\n    }\n  }, [props.children]);\n\n  useEffect(() => {\n    // 滚动容器dom传递到父组件\n    if (getContainerDom) {\n      getContainerDom(container.current);\n    }\n  }, [getContainerDom]);\n\n  useEventListener('scroll', handelScroll, container);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div ref={container} className={styles.scrollContent}>\n        {children}\n      </div>\n      {hasScrollBar && (\n        <div className={styles.scrollBar}>\n          <span style={{ height: slideBlockHeight, top: slideBlockTop }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScrollContainer;\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { easeCubicInOut } from 'd3-ease';\nimport throttle from 'lodash/throttle';\nimport ScrollContainer from '@components/ScrollContainer';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport { getSongLyric } from '@/api';\n\nimport styles from './index.module.less';\n\ninterface ILyric {\n  time: number;\n  txt: string;\n}\n\nconst timeExp = /\\[(\\d{2}):(\\d{2}\\.\\d{1,3})\\]/g;\n\nconst BASELINE = 180;\n\n// 解析歌词\nconst parseLyric = (lyricStr: string) => {\n  if (!lyricStr) return [];\n  const lines = lyricStr.split('\\n');\n  let lyricArr: ILyric[] = [];\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    let result: any = timeExp.exec(line);\n    if (result) {\n      // 去掉时间，留下歌词部分\n      const txt = line.replace(timeExp, '').trim();\n      if (txt) {\n        lyricArr.push({\n          time: result[1] * 60 + result[2] * 1,\n          txt,\n        });\n      }\n    }\n  }\n  lyricArr.sort((a, b) => a.time - b.time);\n  return lyricArr;\n};\n\n/**\n *\n * @param time 当前播放进度\n * @param range 歌词提取出的时间数组\n */\nconst getTimeIndex = (time: number, range: number[]) => {\n  const len = range.length;\n  if (time <= range[0]) return 0;\n  if (time >= range[len - 1]) return len - 1;\n  let index: number = 0;\n  for (const t of range) {\n    if (t > time) {\n      index = range.indexOf(t) - 1;\n      break;\n    }\n  }\n  return index;\n};\n\nconst scroll = (dom: HTMLDivElement, distance: number) => {\n  const duration = 600; // 动画持续时间(ms)\n  let state = 0;\n  let start: number | null = null;\n  const { scrollTop } = dom;\n  const maxScrollTop = distance - scrollTop;\n  const work = (timestamp: number) => {\n    if (!start) {\n      start = timestamp;\n    }\n    state = timestamp - start;\n    const t = state / duration;\n    let progress = easeCubicInOut(t);\n    if (progress > 1) {\n      progress = 1;\n    }\n    const newScrollTop = maxScrollTop * progress;\n    dom.scrollTop = newScrollTop + scrollTop;\n    if (progress < 1) {\n      window.requestAnimationFrame(work);\n    }\n  };\n  window.requestAnimationFrame(work);\n};\n\n// containerDom：滚动容器， 当前dom：dom\nconst srcollToActiveLine = (containerDom: any, dom: any) => {\n  if (!containerDom) return;\n  // 如果当前标亮的段落超过基准线，则滚动超过的部分\n  if (dom.offsetTop > BASELINE) {\n    scroll(containerDom, dom.offsetTop - BASELINE);\n  } else {\n    scroll(containerDom, 0);\n  }\n};\n\nconst Lyric = () => {\n  const { currentTime, list, currentIndex } = useSelector((state: RootState) => state.player);\n\n  const [lyric, setLyric] = useState('');\n  // 歌词解析时间轴数据\n  const formatLyrics = useMemo(() => parseLyric(lyric), [lyric]);\n  // 时间轴\n  const timeRange = useMemo(() => formatLyrics.map(lyr => lyr.time), [formatLyrics]);\n  // 当前播放歌词\n  const [activeIndex, setActiveIndex] = useState(0);\n  // 滚动容器\n  const [container, setContainer] = useState<HTMLDivElement | null>(null);\n\n  const throttleIndex = useCallback(\n    throttle(() => getTimeIndex(currentTime, timeRange), 1000),\n    [currentTime, timeRange],\n  );\n\n  // 根据播放进度，确定当前歌词\n  useEffect(() => {\n    setActiveIndex(throttleIndex() as number);\n  }, [throttleIndex]);\n\n  // 根据当前选中歌词dom,确定滚动\n  useEffect(() => {\n    const lyricDom = document.getElementsByClassName('lyric');\n    if (lyricDom.length > 0) {\n      srcollToActiveLine(container, lyricDom[activeIndex]);\n    }\n  }, [activeIndex, container]);\n\n  useEffect(() => {\n    // 初始化歌词\n    setLyric('');\n    const id = list[currentIndex]?.id;\n    if (!list[currentIndex]?.id) return;\n    getSongLyric(id).then(res => {\n      if (res.data.lrc) {\n        setLyric(res.data.lrc.lyric);\n      }\n    });\n  }, [currentIndex, list]);\n\n  return (\n    <div className={styles.lyric}>\n      <div className={styles.title}>歌词</div>\n      {lyric ? (\n        <ScrollContainer getContainerDom={setContainer}>\n          <div className={styles.lyrContainer}>\n            {formatLyrics.map((line, index) => (\n              <div\n                className={classNames('lyric', styles.line, {\n                  [styles.active]: activeIndex === index,\n                })}\n                key={line.time + line.txt}\n              >\n                {line.txt}\n              </div>\n            ))}\n          </div>\n        </ScrollContainer>\n      ) : (\n        <div className={styles.noLyric}>暂无歌词</div>\n      )}\n    </div>\n  );\n};\n\nexport default Lyric;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ScrollContainer from '@components/ScrollContainer';\nimport Duration from '@components/Duration';\nimport IconFont from '@components/IconFont';\nimport { RootState } from '@/store/rootReducer';\nimport { getSongUrlById } from '@/store/playerSlice';\nimport styles from './index.module.less';\n\nfunction List() {\n  const { list, playing, currentIndex } = useSelector((state: RootState) => state.player);\n\n  const dispatch = useDispatch();\n\n  const play = (id: number) => {\n    const index = list.findIndex(t => t.id === id);\n    dispatch(getSongUrlById({ id, index, autoPlay: true }));\n  };\n\n  return (\n    <div className={styles.list}>\n      <div className={styles.title}>播放列表</div>\n      <ScrollContainer>\n        {list.map((item, index) => (\n          <div key={item.id} className={styles.item}>\n            <div className={styles.index}>{index + 1}</div>\n            <div className={styles.songName}>{item.name}</div>\n            <div className={styles.songCreator}>{item.authors}</div>\n            <div className={styles.second}>\n              <Duration seconds={item.seconds} />\n            </div>\n            <div className={styles.canPlaying} onClick={() => play(item.id)}>\n              {index === currentIndex && playing ? (\n                <IconFont type=\"icon-pause\" />\n              ) : (\n                <IconFont type=\"icon-play\" />\n              )}\n            </div>\n          </div>\n        ))}\n      </ScrollContainer>\n    </div>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\n\nimport Lyric from './Lyric';\nimport List from './List';\nimport styles from './index.module.less';\n\ninterface Iprops {\n  className?: any;\n}\n\nconst AudioPopup = (props: Iprops) => {\n  const { list, currentIndex } = useSelector((state: RootState) => state.player);\n\n  return (\n    <div className={classNames(styles.container, props.className)}>\n      <div\n        className={styles.backImg}\n        style={{ backgroundImage: `url('${list[currentIndex]?.coverImgUrl}')` }}\n      />\n      <div className={styles.content}>\n        <List />\n        <Lyric />\n      </div>\n    </div>\n  );\n};\n\nexport default AudioPopup;\n","import React, { useRef, useState } from 'react';\nimport { Slider, Button } from 'antd';\nimport classNames from 'classnames';\nimport IconFont from '@components/IconFont';\nimport { useOnClickOutside } from '@/hooks';\nimport { changeVolume } from '@/store/playerSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport styles from './index.module.less';\n\nconst Volume = () => {\n  const { volume } = useSelector((state: RootState) => state.player);\n  const dispatch = useDispatch();\n\n  const ref = useRef(null);\n  const [showVolume, setShowVolume] = useState(false);\n\n  // 他处点击关闭声音调节弹窗\n  useOnClickOutside(ref, () => setShowVolume(false));\n\n  const onVolumeChange = (val: number) => {\n    dispatch(changeVolume({ volume: val }));\n  };\n\n  const toggleVolume = () => {\n    setShowVolume(!showVolume);\n  };\n\n  const onVolumeAfterChange = () => {\n    toggleVolume();\n  };\n\n  return (\n    <div className={styles.volume} ref={ref}>\n      <Button onClick={toggleVolume} type=\"text\" icon={<IconFont type=\"icon-volume\" />} />\n      <div className={classNames(styles.content, { [styles.hide]: !showVolume })}>\n        <Slider\n          value={volume}\n          min={0}\n          max={100}\n          onChange={onVolumeChange}\n          onAfterChange={onVolumeAfterChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Volume;\n","import React, { useState } from 'react';\r\nimport { Button, Badge } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './index.module.less';\r\nimport Audio from '@/components/Audio';\r\nimport IconFont from '@components/IconFont';\r\n\r\nimport Controller from './Controller';\r\nimport PlayerInfo from './PlayerInfo';\r\nimport PlayerPopup from './PlayerPopup';\r\nimport Volume from './Volume';\r\n\r\nimport { RootState } from '@/store/rootReducer';\r\n\r\nconst Player = () => {\r\n  const { list } = useSelector((state: RootState) => state.player);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const toggleContainer = () => {\r\n    setShowPopup(!showPopup);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.player}>\r\n      <Audio />\r\n      <div className={styles.audio}>\r\n        <Controller />\r\n        <PlayerInfo />\r\n        <div className={styles.menu}>\r\n          <div className={styles.button}>\r\n            <Volume />\r\n          </div>\r\n          <div className={styles.button}>\r\n            <Badge count={list.length} overflowCount={99} size=\"small\" offset={[5, 0]}>\r\n              <Button\r\n                onClick={toggleContainer}\r\n                type=\"text\"\r\n                icon={<IconFont type=\"icon-music-list\" />}\r\n              />\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <PlayerPopup className={{ [styles.hide]: !showPopup }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\nimport IconFont from '../IconFont';\nimport Player from '../Player';\n\nconst PlayerBox = () => {\n  const [isLock, setLock] = useState(true);\n  const toggltLock = () => {\n    setLock(!isLock);\n  };\n  return (\n    <div className={classNames(styles.playerBox, { [styles.locked]: isLock })}>\n      <div className={styles.lockBox} onClick={toggltLock}>\n        <IconFont type={isLock ? 'icon-lock_fill' : 'icon-unlock_fill'} />\n      </div>\n      <Player />\n    </div>\n  );\n};\n\nexport default PlayerBox;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PlayerBox from '@components/PlayerBox';\nimport { useDispatch } from 'react-redux';\nimport { useLocalStorage } from '@/hooks';\nimport { getSongUrlById, setSongList } from './store/playerSlice';\nimport './App.css';\nimport { ISong } from '@/interfaces';\n\nconst Home = React.lazy(() => import('@pages/home'));\nconst Album = React.lazy(() => import('@pages/album'));\n\nfunction App(): JSX.Element {\n  const dispatch = useDispatch();\n  const [data] = useLocalStorage<ISong[]>('cache-song-list', null);\n  // 初始化播放器数据\n  useEffect(() => {\n    if (data) {\n      // 载入缓存中的数据\n      dispatch(setSongList({ data }));\n      dispatch(getSongUrlById({ id: data[0].id, index: 0, autoPlay: false }));\n    }\n  }, [data, dispatch]);\n\n  return (\n    <Fragment>\n      <Router>\n        <React.Suspense fallback=\"加载中...\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/album/:id?\" exact component={Album} />\n          </Switch>\n        </React.Suspense>\n      </Router>\n      <PlayerBox />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport playerReducer from './playerSlice';\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport { useDispatch } from 'react-redux';\nimport rootReducer from './rootReducer';\n\nconst middleware = getDefaultMiddleware({\n  serializableCheck: false,\n  immutableCheck: false,\n})\n\n// 开发模式添加logger插件\n// if (process.env.NODE_ENV !== 'production') {\n//   middleware.push(logger)\n// }\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware,\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').defult;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport './index.css';\n\nconst render = (): void => {\n  const App = require('./App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\n\n// 热更新\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./App', render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createFromIconfontCN } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2060370_k34zyn39meh.js',\n});\n\nexport default IconFont;\n","import { useState, useRef, useEffect, useMemo, RefObject } from 'react';\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\nimport queryString from 'query-string';\n\n// 缓存hook\nexport function useLocalStorage<T> (key:string, initialValue:T | null): [T, Function]{\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch(error) {\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue): value\n      setStoredValue(valueToStore)\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  return [storedValue, setValue]\n}\n\n// 计时器hook\nexport const useInterval = (callback:Function, delay:number) => {\n  const savedCallback = useRef<Function | null>(null)\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback])\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current!();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n// 路由\nexport function useRouter() {\n  const params = useParams()\n  const location = useLocation()\n  const history = useHistory()\n  const match = useRouteMatch()\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: {\n        ...queryString.parse(location.search), // Convert string to object\n        ...params,\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history])\n}\n\n// 事件绑定hook\nexport function useEventListener<T extends HTMLElement = HTMLDivElement>(\n  eventName: string,\n  handler: Function,\n  element?: RefObject<T>,\n) {\n  // Create a ref that stores handler\n  const savedHandler = useRef<Function>()\n  useEffect(() => {\n    // Define the listening target\n    const targetElement: T | Window = element?.current || window\n    if (!(targetElement && targetElement.addEventListener)) {\n      return\n    }\n    // Update saved handler if necessary\n    if (savedHandler.current !== handler) {\n      savedHandler.current = handler\n    }\n    // Create event listener that calls handler function stored in ref\n    const eventListener = (event: Event) => {\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!savedHandler?.current) {\n        savedHandler.current(event)\n      }\n    }\n    targetElement.addEventListener(eventName, eventListener)\n    // Remove event listener on cleanup\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener)\n    }\n  }, [eventName, element, handler])\n}\n\n// 他出点击hook\nexport function useOnClickOutside<T extends HTMLElement = HTMLDivElement>(ref:RefObject<T>, handler: Function) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n\n// debug用hook\nexport function useWhyDidYouUpdate(name: string, props:any) {\n  // Get a mutable ref object where we can store props ...\n  // ... for comparison next time this hook runs.\n  const previousProps = useRef<any>(null);\n\n  useEffect(() => {\n    if (previousProps.current) {\n      // Get all keys from previous and current props\n      const allKeys = Object.keys({ ...previousProps.current, ...props });\n      // Use this object to keep track of changed props\n      const changesObj: any = {};\n      // Iterate through keys\n      allKeys.forEach(key => {\n        // If previous is different from current\n        if (previousProps.current[key] !== props[key]) {\n          // Add to changesObj\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key],\n          };\n        }\n      });\n\n      // If changesObj not empty then output to console\n      if (Object.keys(changesObj).length) {\n        console.log('[why-did-you-update]', name, changesObj);\n      }\n    }\n\n    // Finally update previousProps with current props for next hook call\n    previousProps.current = props;\n  });\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"_1LxbsqqjGBLOqVqgBqCCov\",\"title\":\"_3dvqaAGxilCidD4Ur_bugg\",\"item\":\"_1wJIFRmT2YyJljNevROwZk\",\"index\":\"_3nf1fcYn-6cbRPeKn06mrZ\",\"songName\":\"WxSHLXNQQFOziMm1aCKqy\",\"songCreator\":\"_1ugcmccGusczdJlWYf9212\",\"second\":\"_37jlLwb08YBMhRxCkQWOmW\",\"canPlaying\":\"_2ZEWdV13aH6e9v8cnt3EYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverBox\":\"lxJgT-fjjXw_7rraI7bYO\",\"player\":\"_3DhximAgjXprNcUZvJJBb4\",\"audio\":\"_1Pe6zvjWU7bP1BxTzrxfas\",\"menu\":\"tgQynu_4eKMbG5-UX8NkB\",\"button\":\"rurHG8HbXrba9qsVi4f3_\",\"hide\":\"_3o0vr9lO59B0yORstHN0Ml\",\"rotate\":\"VV3QjzPv7HgLzppge8uuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lyric\":\"_36gCoVKLyhO1nTu9xYoMEc\",\"title\":\"_3qqYsPxmovIwQArcHXRQll\",\"noLyric\":\"_1DrgpvSbpwma0XYK9iPw5M\",\"lyrContainer\":\"_14oc-c8q9_sgiGwNFDFdX9\",\"line\":\"pCUgA4uSUiTJazD25gTI4\",\"active\":\"_3Bk07JaIoB-KcRNGIdSTj0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverBox\":\"_2DIFyG2nNwJiUgBuyjA1U3\",\"info\":\"JZBTfYdIBc87LroL0lx1O\",\"coverImage\":\"_1eZmvcMW81npTZkS2qKWII\",\"content\":\"_17Fc62jpOX9AK3O4AJzpRw\",\"head\":\"_33rQxlJpmYr0X-9NEiPJzA\",\"progress\":\"_3PodrHzN9N9CyoaoPhuZrZ\",\"rotate\":\"_2tBuQko9JBjNjg2AC-GUo-\"};","import React from 'react';\nimport moment from 'moment';\n\ninterface IProps {\n  className?: string;\n  seconds: number;\n}\n\nconst Duration = (props: IProps) => {\n  return (\n    <span className={props.className}>\n      {moment(new Date(props.seconds * 1000))\n        .utcOffset(0)\n        .format('mm:ss')}\n    </span>\n  );\n};\n\nexport default Duration;\n","import { AxiosResponse, AxiosRequestConfig } from 'axios';\n\nconst axiosConfig: AxiosRequestConfig = {\n  baseURL: '/',\n  // 请求后的数据处理\n  transformResponse: [\n    function (data: AxiosResponse): AxiosResponse {\n      return data;\n    },\n  ],\n  timeout: 30000,\n  responseType: 'json',\n  // 最大响应数据大小\n  maxContentLength: 2000,\n  // 自定义错误状态码范围\n  validateStatus: function (status: number) {\n    return status >= 200 && status < 300;\n  },\n};\n\nexport default axiosConfig;\n","import axios, { AxiosRequestConfig } from 'axios';\nimport config from './config';\n\nconst pending: Array<{\n  url: string;\n  cancel: Function;\n}> = [];\n\nconst cancelToken = axios.CancelToken;\n\nconst removePending = (config: AxiosRequestConfig) => {\n  for (const p in pending) {\n    const item: any = p;\n    const list: any = pending[p];\n    // 当前请求在数组中存在时执行函数体\n    if (list.url === config.url + '&request_type=' + config.method) {\n      // 执行取消操作\n      list.cancel();\n      // 从数组中移除记录\n      pending.splice(item, 1);\n    }\n  }\n};\n\nconst request = axios.create(config);\n\n// 添加请求拦截器\nrequest.interceptors.request.use(\n  async config => {\n    removePending(config);\n    config.cancelToken = await new cancelToken(c => {\n      pending.push({\n        url: config.url + '&request_type=' + config.method,\n        cancel: c,\n      });\n    });\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  },\n);\n\n// 返回状态判断(添加响应拦截器)\nrequest.interceptors.response.use(\n  res => {\n    removePending(res.config);\n    return res;\n  },\n  error => {\n    return Promise.reject(error);\n  },\n);\n\nexport default request;\n","import request from './request';\nimport { AxiosResponse } from 'axios';\nconst baseUrl = 'http://api.xujianfeng.work';\n\n/**\n * 获取首页轮播图\n * @param {string} type [0:pc;1:android;2:iphone;3:ipad]\n */\nfunction getBanner(type: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/banner?type=${type}`);\n}\n\n/**\n * 获取歌单分类\n */\nfunction getCatlist(): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/catlist`);\n}\n\n/**\n * 获取歌单分类\n */\nfunction getHotCatlist(): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/hot`);\n}\n\n// 歌单查询参数\ninterface AlbumArg {\n  limit: number;\n  cat: string;\n  offset: number;\n  order?: string;\n}\n\n/**\n * 获取歌单\n */\nfunction getAlbumList({ limit, cat, offset = 0, order = 'hot' }: AlbumArg): Promise<AxiosResponse> {\n  return request.get(\n    `${baseUrl}/top/playlist/?limit=${limit}&order=${order}&offset=${offset}&cat=${cat}`,\n  );\n}\n\n/**\n * 获取（歌单）专辑 详情\n * @param {string} id\n */\nfunction getAlbumDetail(id: string): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/detail?id=${id}`);\n}\n\n/**\n * 获取歌曲列表\n * @param {string} id\n */\nfunction getSongList(ids: string): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/song/detail?ids=${ids}`);\n}\n\n/**\n * 获取歌曲播放链接\n * @param {number} id\n */\nfunction getSongUrl(id: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/song/url?id=${id}`);\n}\n\n/**\n * 获取歌曲歌词\n * @param {number} id\n */\nfunction getSongLyric(id: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/lyric?id=${id}`);\n}\n\nexport {\n  getBanner,\n  getCatlist,\n  getHotCatlist,\n  getAlbumList,\n  getAlbumDetail,\n  getSongList,\n  getSongUrl,\n  getSongLyric,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerBox\":\"_1URRVA-GI-BhQrZHYVMx7q\",\"lockBox\":\"_3x_32CtSBvIaSYOhs1xoFw\",\"locked\":\"_1KXt7a7thzbSV41Jrlm5r3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controller\":\"_3nxUfdN_1S6Ajw7_sKNZN2\",\"button\":\"_2zax7mXYqEFKOWCa9eaYH7\",\"disabled\":\"_3TDBCUO2ogsKqFQmWF9sdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1y9RWNpnFF9NnWRjrpfKOK\",\"scrollContent\":\"_1lIo99iXuF_CW3FF83M_DZ\",\"scrollBar\":\"_1_rEIrL1zBBv65zuNSJ9E7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FCL-Q5nnH7yHs3pSuW9DD\",\"backImg\":\"_1WUIbNukniQMOFv1psCOM0\",\"content\":\"_2X1SQjzhy3UivK-25ecvf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volume\":\"_1mFScWrawXQlIT_1Yl0hpZ\",\"content\":\"_1e0pTL8BnuE8N4dXeEUe7x\",\"hide\":\"_2SNfEAz9V5mSeeCnYO-O57\"};"],"sourceRoot":""}