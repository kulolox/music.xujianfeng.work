{"version":3,"sources":["components/LazyImage/index.tsx","assets/imgs/default_image.svg","components/Category/index.module.less","components/Category/List/index.module.less","components/Banner/index.module.less","pages/home/index.module.less","components/Category/List/index.tsx","components/Category/index.tsx","components/Banner/index.tsx","pages/home/index.tsx"],"names":["LazyImage","props","useState","isOnload","setOnload","useEffect","img","Image","src","onload","IMAGE_PLACHOLDER","style","width","height","border","alt","module","exports","CheckableTag","Tag","List","className","styles","catList","map","cat","key","type","catItem","catType","typeName","catContent","list","t","name","tag","checked","selectedCat","onClick","onSelect","catSelect","showCatList","setShowCatList","setCatList","useCallback","val","getCatlist","then","res","data","categories","sub","Object","keys","forEach","push","parseInt","filter","s","category","placement","visible","content","currentCat","trigger","IconFont","Banner","banners","setBanners","dataCache","localStorage","getItem","JSON","parse","a","getBanner","scm","imageUrl","setItem","stringify","fetchData","swiper","autoplay","banner","initalState","pageNo","totalCount","albumList","homeReducer","state","action","payload","useImmerReducer","dispatch","loading","setLoading","selectCat","getAlbumList","limit","offset","playlists","album","id","coverImgUrl","playCount","creator","total","home","albumBox","Category","to","cover","fontSize","marginRight","creatorName","nickname","pagination","defaultCurrent","current","onChange","pageIndex","defaultPageSize","showSizeChanger"],"mappings":"iJAmCeA,IAzBG,SAACC,GAAmB,IAAD,EACLC,oBAAS,GADJ,mBAC5BC,EAD4B,KAClBC,EADkB,KAYnC,OATAC,qBAAU,WACR,IAAMC,EAAM,IAAIC,MAKhB,OAJAD,EAAIE,IAAMP,EAAMO,IAChBF,EAAIG,OAAS,WACXL,GAAU,IAEJE,EAAIG,OAAS,eACpB,CAACR,EAAMO,MAGR,yBACEA,IAAKL,EAAWF,EAAMO,IAAME,IAC5BC,MAAO,CACLC,MAAOX,EAAMW,MACbC,OAAQZ,EAAMY,OACdC,OAAQb,EAAMa,OAAS,oBAAsB,QAE/CC,IAAI,O,oBC9BVC,EAAOC,QAAU,IAA0B,2C,0CCC3CD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,IAAM,4B,oBCA7DD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,QAAU,0BAA0B,QAAU,0BAA0B,WAAa,wBAAwB,IAAM,4B,oBCAvKD,EAAOC,QAAU,CAAC,OAAS,4B,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,wBAAwB,KAAO,0BAA0B,MAAQ,0BAA0B,MAAQ,0BAA0B,UAAY,wBAAwB,YAAc,wBAAwB,KAAO,0BAA0B,QAAU,0BAA0B,WAAa,4B,gOCU/UC,EAAiBC,IAAjBD,aA0BOE,EAxBF,SAACnB,GACZ,OACE,yBAAKoB,UAAWC,IAAOC,SACpBtB,EAAMsB,QAAQC,KAAI,SAAAC,GAAG,OACpB,yBAAKC,IAAKD,EAAIE,KAAMN,UAAWC,IAAOM,SACpC,yBAAKP,UAAWC,IAAOO,SAAUJ,EAAIK,UACrC,yBAAKT,UAAWC,IAAOS,YACpBN,EAAIO,KAAKR,KAAI,SAACS,GAAD,OACZ,kBAACf,EAAD,CACEQ,IAAKO,EAAEC,KACPb,UAAWC,IAAOa,IAClBC,QAASnC,EAAMoC,cAAgBJ,EAAEC,KACjCI,QAAS,kBAAMrC,EAAMsC,SAASN,EAAEC,QAE/BD,EAAEC,gBCbJ,WAACjC,GAAgC,IACtCuC,EAAcvC,EAAduC,UADqC,EAEPtC,oBAAS,GAFF,mBAEtCuC,EAFsC,KAEzBC,EAFyB,OAIfxC,mBAAiB,IAJF,mBAItCqB,EAJsC,KAI7BoB,EAJ6B,KAMvCJ,EAAWK,uBACf,SAACC,GACCL,EAAUK,GACVH,GAAe,KAEjB,CAACF,IAkBH,OAfAnC,qBAAU,WACRyC,cAAaC,MAAK,SAAAC,GAAQ,IAAD,EACKA,EAAIC,KAAxBC,EADe,EACfA,WAAYC,EADG,EACHA,IACdnB,EAAe,GACrBoB,OAAOC,KAAKH,GAAYI,SAAQ,SAAArB,GAC9BD,EAAKuB,KAAK,CACR5B,KAAM6B,SAASvB,GACfH,SAAUoB,EAAWjB,GACrBD,KAAMmB,EAAIM,QAAO,SAACC,GAAD,OAA6BA,EAAEC,WAAaH,SAASvB,WAG1EU,EAAWX,QAEZ,IAGD,yBAAKX,UAAWC,IAAOqC,UACrB,kBAAC,IAAD,CACEC,UAAU,UACVC,QAASpB,EACTqB,QAAS,kBAAC,EAAD,CAAMvC,QAASA,EAASc,YAAapC,EAAM8D,WAAYxB,SAAUA,IAC1EyB,QAAQ,SAER,kBAAC,IAAD,CAAQ1B,QAAS,kBAAMI,GAAgBD,KAAvC,2BAEE,kBAACwB,EAAA,EAAD,CAAUtC,KAAK,cAGnB,yBAAKN,UAAWC,IAAOG,KAAvB,iCAAkCxB,EAAM8D,c,2BCf/BG,EAjCA,WAAO,IAAD,EACWhE,mBAAoB,IAD/B,mBACZiE,EADY,KACHC,EADG,KAsBnB,OAlBA/D,qBAAU,WACR,IAAMgE,EAAYC,aAAaC,QAAQ,WACnCF,EACFD,EAAWI,KAAKC,MAAMJ,IAEP,uCAAG,8BAAAK,EAAA,sEACEC,YAAU,GADZ,OACV3B,EADU,OAEVC,EAAOD,EAAIC,KAAKkB,QAAQ3C,KAAI,SAACS,GAAD,MAAiB,CACjD2C,IAAK3C,EAAE2C,IACPC,SAAU5C,EAAE4C,aAEdP,aAAaQ,QAAQ,UAAWN,KAAKO,UAAU9B,IAC/CmB,EAAWnB,GAPK,2CAAH,oDASf+B,KAED,IAGD,kBAAC,IAAD,CAAU3D,UAAWC,IAAO2D,OAAQC,UAAQ,GACzCf,EAAQ3C,KAAI,SAAA2D,GAAM,OACjB,yBAAKzD,IAAKyD,EAAOP,KACf,yBAAKpE,IAAK2E,EAAON,SAAU9D,IAAI,W,kBCbnCqE,EAAsB,CAC1BC,OAAQ,EACRC,WAAY,EACZ7D,IAAK,eACL8D,UAAW,IAGb,SAASC,EAAYC,EAAeC,GAClC,OAAQA,EAAO/D,MACb,IAAK,iBAAmB,IAAD,EACa+D,EAAOC,QAAjCJ,EADa,EACbA,UAAWD,EADE,EACFA,WAGnB,OAFAG,EAAMF,UAAYA,OAClBE,EAAMH,WAAaA,GAGrB,IAAK,aAGH,OAFAG,EAAMJ,OAAS,OACfI,EAAMhE,IAAMiE,EAAOC,SAGrB,IAAK,cAEH,YADAF,EAAMJ,OAASK,EAAOC,SAGxB,QACE,QAIS,qBAAoB,IAAD,EACNC,YAAgBJ,EAAaJ,GADvB,mBACzBK,EADyB,KAClBI,EADkB,KAExBR,EAAuCI,EAAvCJ,OAAQC,EAA+BG,EAA/BH,WAAY7D,EAAmBgE,EAAnBhE,IAAK8D,EAAcE,EAAdF,UAFD,EAIFrF,oBAAS,GAJP,mBAIzB4F,EAJyB,KAIhBC,EAJgB,KAe1BvD,EAAYI,uBAChB,SAACnB,GACCoE,EAAS,CACPlE,KAAM,aACNgE,QAASlE,IAEX6C,aAAaQ,QAAQ,aAAcrD,KAErC,CAACoE,IAyCH,OArCAxF,qBAAU,WACR,IAAM2F,EAAY1B,aAAaC,QAAQ,eAAiB,GACpDyB,GACFH,EAAS,CACPlE,KAAM,aACNgE,QAASK,MAGZ,CAACH,IAGJxF,qBAAU,WAAM,4CACd,8BAAAqE,EAAA,6DACEqB,GAAW,GADb,SAEyBE,YAAa,CAClCxE,MACAyE,MA1EM,GA2ENC,OA3EM,IA2EGd,EAAS,KALtB,gBAEUpC,EAFV,EAEUA,KAMR4C,EAAS,CACPlE,KAAM,iBACNgE,QAAS,CACPJ,UAAWtC,EAAKmD,UAAU5E,KAAI,SAAC6E,GAAD,MAAoB,CAChDC,GAAID,EAAMC,GACVC,YAAaF,EAAME,YACnBC,UAAWH,EAAMG,UACjBtE,KAAMmE,EAAMnE,KACZuE,QAASJ,EAAMI,YAEjBnB,WAAYrC,EAAKyD,SAGrBX,GAAW,GArBb,4CADc,uBAAC,WAAD,wBAwBdf,KACC,CAACvD,EAAKoE,EAAUR,IAEjB,yBAAKhE,UAAWC,IAAOqF,MACrB,kBAAC,EAAD,MACA,yBAAKtF,UAAWC,IAAOsF,UACrB,kBAACC,EAAD,CAAU9C,WAAYtC,EAAKe,UAAWA,IAEtC,yBAAKnB,UAAWC,IAAOU,MACpB8D,EACC,yBAAKzE,UAAWC,IAAOwE,SACrB,kBAAC,IAAD,OAGFP,EAAU/D,KAAI,SAAA6E,GAAK,OACjB,kBAAC,IAAD,CAAM3E,IAAK2E,EAAMC,GAAIjF,UAAWC,IAAO+E,MAAOS,GAAE,iBAAYT,EAAMC,KAChE,yBAAKjF,UAAU,YACb,yBAAKA,UAAWC,IAAOyF,OACrB,kBAAC/G,EAAA,EAAD,CAAWQ,IAAK6F,EAAME,YAAa3F,MAAM,OAAOC,OAAO,SACvD,yBAAKQ,UAAWC,IAAOkF,WACrB,kBAACvC,EAAA,EAAD,CAAUtC,KAAK,kBAAkBhB,MAAO,CAAEqG,SAAU,GAAIC,YAAa,KACrE,8BAAOZ,EAAMG,YAEf,yBAAKnF,UAAWC,IAAO4F,aAAcb,EAAMI,QAAQU,WAErD,yBAAK9F,UAAWC,IAAOY,MAAOmE,EAAMnE,YAO9C,kBAAC,IAAD,CACEb,UAAWC,IAAO8F,WAClBC,eAAgB,EAChBC,QAASjC,EACTqB,MAAOpB,EACPiC,SA5Fe,SAACC,GACtB3B,EAAS,CACPlE,KAAM,cACNgE,QAAS6B,KA0FLC,gBAnII,GAoIJC,iBAAiB","file":"static/js/5.f4da401d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport IMAGE_PLACHOLDER from '@/assets/imgs/default_image.svg';\n\ninterface IProps {\n  src: string;\n  width: string;\n  height: string;\n  border?: boolean;\n}\n\nconst LazyImage = (props: IProps) => {\n  const [isOnload, setOnload] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = props.src;\n    img.onload = () => {\n      setOnload(true);\n    };\n    return (img.onload = () => {});\n  }, [props.src]);\n\n  return (\n    <img\n      src={isOnload ? props.src : IMAGE_PLACHOLDER}\n      style={{\n        width: props.width,\n        height: props.height,\n        border: props.border ? '1px solid #f1f1f1' : 'none',\n      }}\n      alt=\"\"\n    />\n  );\n};\n\nexport default LazyImage;\n","module.exports = __webpack_public_path__ + \"static/media/default_image.3590e8c0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"_3mAHRFcYGDiGQD5NjIXGPy\",\"cat\":\"_2fL91aoxtpB750p_bV8Grf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catList\":\"mEruZ2ckuwrGDZ2MSXJCo\",\"catItem\":\"_2O84mjn8D8wOpxfnqEOtXv\",\"catType\":\"_3oAYWiiJH6phwibICqvAt3\",\"catContent\":\"gTqd4UnIQvBWXOCowsaEq\",\"tag\":\"_3DVQ_vSuNEcYjSVWusAXTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swiper\":\"_1EPEcDdAt_xfYq1lMSsMNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"_1rW0pNaf1fNsEyxJ1Mfjzu\",\"albumBox\":\"DSzUk1jApFhiIiiziwiiJ\",\"list\":\"_1LyBgoCtD8vu00-fH7p4bX\",\"album\":\"_25TOVTjWvPZEpDlZ4Ctxbi\",\"cover\":\"_12_QnF4bHP0O3Cx_-GWY_i\",\"playCount\":\"tcVtdPf6Ib8JCZMb4hjSI\",\"creatorName\":\"CRwK1pNC0vrWnK4-lgwX5\",\"name\":\"_2M4N4JW1q7OQBBF9dnfQqx\",\"loading\":\"_2Ip9WDlAUl5XMui_Of-U7r\",\"pagination\":\"_1QrPHZIz1OLO5wAAzxjVHI\"};","import React from 'react';\nimport { Tag } from 'antd';\nimport { ICat } from '@/interfaces';\nimport styles from './index.module.less';\n\ninterface Iprops {\n  catList: ICat[];\n  onSelect: Function;\n  selectedCat: string;\n}\n\nconst { CheckableTag } = Tag;\n\nconst List = (props: Iprops) => {\n  return (\n    <div className={styles.catList}>\n      {props.catList.map(cat => (\n        <div key={cat.type} className={styles.catItem}>\n          <div className={styles.catType}>{cat.typeName}</div>\n          <div className={styles.catContent}>\n            {cat.list.map((t: { name: string }) => (\n              <CheckableTag\n                key={t.name}\n                className={styles.tag}\n                checked={props.selectedCat === t.name}\n                onClick={() => props.onSelect(t.name)}\n              >\n                {t.name}\n              </CheckableTag>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Popover, Button } from 'antd';\nimport { getCatlist } from '@/api';\nimport IconFont from '@/components/IconFont';\nimport styles from './index.module.less';\nimport { ICat } from '@/interfaces';\nimport '@/css/animation.less';\nimport List from './List';\n\ninterface IProps {\n  currentCat: string;\n  catSelect: Function;\n}\n\nexport default (props: IProps): JSX.Element => {\n  const { catSelect } = props;\n  const [showCatList, setShowCatList] = useState(false);\n  // 分类表\n  const [catList, setCatList] = useState<ICat[]>([]);\n\n  const onSelect = useCallback(\n    (val: string) => {\n      catSelect(val);\n      setShowCatList(false);\n    },\n    [catSelect],\n  );\n\n  useEffect(() => {\n    getCatlist().then(res => {\n      const { categories, sub } = res.data;\n      const list: ICat[] = [];\n      Object.keys(categories).forEach(t => {\n        list.push({\n          type: parseInt(t),\n          typeName: categories[t],\n          list: sub.filter((s: { category: number }) => s.category === parseInt(t)),\n        });\n      });\n      setCatList(list);\n    });\n  }, []);\n\n  return (\n    <div className={styles.category}>\n      <Popover\n        placement=\"topLeft\"\n        visible={showCatList}\n        content={<List catList={catList} selectedCat={props.currentCat} onSelect={onSelect} />}\n        trigger=\"click\"\n      >\n        <Button onClick={() => setShowCatList(!showCatList)}>\n          选择风格\n          <IconFont type=\"icon-up\" />\n        </Button>\n      </Popover>\n      <div className={styles.cat}>当前风格：{props.currentCat}</div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Carousel } from 'antd';\n\nimport { IBanner } from '@/interfaces';\nimport { getBanner } from '@/api';\n\nimport styles from './index.module.less';\n\nconst Banner = () => {\n  const [banners, setBanners] = useState<IBanner[]>([]);\n\n  // 获取轮播图\n  useEffect(() => {\n    const dataCache = localStorage.getItem('BANNERS');\n    if (dataCache) {\n      setBanners(JSON.parse(dataCache));\n    } else {\n      const fetchData = async () => {\n        const res = await getBanner(0);\n        const data = res.data.banners.map((t: IBanner) => ({\n          scm: t.scm,\n          imageUrl: t.imageUrl,\n        }));\n        localStorage.setItem('BANNERS', JSON.stringify(data));\n        setBanners(data);\n      };\n      fetchData();\n    }\n  }, []);\n\n  return (\n    <Carousel className={styles.swiper} autoplay>\n      {banners.map(banner => (\n        <div key={banner.scm}>\n          <img src={banner.imageUrl} alt=\"\" />\n        </div>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Pagination, Spin } from 'antd';\nimport { useImmerReducer } from 'use-immer';\nimport { getAlbumList } from '@/api';\nimport { IAblum } from '@/interfaces';\nimport IconFont from '@/components/IconFont';\nimport LazyImage from '@/components/LazyImage';\nimport Category from '@/components/Category';\nimport '@/css/animation.less';\nimport Banner from '@/components/Banner';\nimport styles from './index.module.less';\n\ninterface IState {\n  pageNo: number;\n  totalCount: number;\n  cat: string;\n  albumList: IAblum[];\n}\nconst LIMIT = 25;\n\nconst initalState: IState = {\n  pageNo: 1,\n  totalCount: 0,\n  cat: '华语',\n  albumList: [],\n};\n// TODO userReducer 整个多个state,演示useReduce\nfunction homeReducer(state: IState, action: any) {\n  switch (action.type) {\n    case 'GET_ALBUM_LIST': {\n      const { albumList, totalCount } = action.payload;\n      state.albumList = albumList;\n      state.totalCount = totalCount;\n      return;\n    }\n    case 'CAT_SELECT': {\n      state.pageNo = 1;\n      state.cat = action.payload;\n      return;\n    }\n    case 'PAGE_CHANGE': {\n      state.pageNo = action.payload;\n      return;\n    }\n    default:\n      return;\n  }\n}\n\nexport default (): JSX.Element => {\n  const [state, dispatch] = useImmerReducer(homeReducer, initalState);\n  const { pageNo, totalCount, cat, albumList } = state;\n\n  const [loading, setLoading] = useState(false);\n\n  // 分页变动\n  const onPageNoChange = (pageIndex: number) => {\n    dispatch({\n      type: 'PAGE_CHANGE',\n      payload: pageIndex,\n    });\n  };\n\n  // 切换分类\n  const catSelect = useCallback(\n    (cat: string) => {\n      dispatch({\n        type: 'CAT_SELECT',\n        payload: cat,\n      });\n      localStorage.setItem('CAT_SELECT', cat);\n    },\n    [dispatch],\n  );\n\n  // 从缓存中查询当前风格分类\n  useEffect(() => {\n    const selectCat = localStorage.getItem('CAT_SELECT') || '';\n    if (selectCat) {\n      dispatch({\n        type: 'CAT_SELECT',\n        payload: selectCat,\n      });\n    }\n  }, [dispatch]);\n\n  // 获取专辑列表\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const { data } = await getAlbumList({\n        cat,\n        limit: LIMIT,\n        offset: (pageNo - 1) * LIMIT,\n      });\n      // 更新歌单列表\n      dispatch({\n        type: 'GET_ALBUM_LIST',\n        payload: {\n          albumList: data.playlists.map((album: IAblum) => ({\n            id: album.id,\n            coverImgUrl: album.coverImgUrl,\n            playCount: album.playCount,\n            name: album.name,\n            creator: album.creator,\n          })),\n          totalCount: data.total,\n        },\n      });\n      setLoading(false);\n    }\n    fetchData();\n  }, [cat, dispatch, pageNo]);\n  return (\n    <div className={styles.home}>\n      <Banner />\n      <div className={styles.albumBox}>\n        <Category currentCat={cat} catSelect={catSelect} />\n\n        <div className={styles.list}>\n          {loading ? (\n            <div className={styles.loading}>\n              <Spin />\n            </div>\n          ) : (\n            albumList.map(album => (\n              <Link key={album.id} className={styles.album} to={`/album/${album.id}`}>\n                <div className=\"hoverBox\">\n                  <div className={styles.cover}>\n                    <LazyImage src={album.coverImgUrl} width=\"100%\" height=\"auto\" />\n                    <div className={styles.playCount}>\n                      <IconFont type=\"icon-play-count\" style={{ fontSize: 16, marginRight: 2 }} />\n                      <span>{album.playCount}</span>\n                    </div>\n                    <div className={styles.creatorName}>{album.creator.nickname}</div>\n                  </div>\n                  <div className={styles.name}>{album.name}</div>\n                </div>\n              </Link>\n            ))\n          )}\n        </div>\n\n        <Pagination\n          className={styles.pagination}\n          defaultCurrent={1}\n          current={pageNo}\n          total={totalCount}\n          onChange={onPageNoChange}\n          defaultPageSize={LIMIT}\n          showSizeChanger={false}\n        />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}